# Generated by Django 4.0.3 on 2022-03-31 18:03

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('rental_property', '0016_rentalunit_rent_amount'),
        ('accounts', '0009_alter_usernotifications_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ElectricityBilling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_code', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('measuring_unit', models.CharField(default='KWH', max_length=20)),
                ('units', models.DecimalField(decimal_places=2, default=0, max_digits=9)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('total', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=9, null=True)),
                ('amount_paid', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=9, null=True)),
                ('month', multiselectfield.db.fields.MultiSelectField(choices=[('jan', 'January'), ('feb', 'February'), ('mar', 'March'), ('apr', 'April'), ('may', 'May'), ('jun', 'June'), ('jul', 'July'), ('aug', 'August'), ('sep', 'September'), ('oct', 'October'), ('nov', 'November'), ('dec', 'December')], max_length=47)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('cleared', models.BooleanField(default=False)),
                ('lock_cycle', models.BooleanField(default=False)),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('due_date', models.DateField()),
                ('added', models.DateTimeField(default=datetime.datetime.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rental_property.building')),
            ],
            options={
                'verbose_name_plural': 'Billing 3 | Electricity Billing Cycles',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='mpesa, bank transfer e.g. kcb', max_length=30)),
                ('account_name', models.CharField(max_length=50)),
                ('paybill_number', models.CharField(blank=True, help_text='Not required for bank transfer', max_length=20, null=True)),
                ('account_number', models.CharField(max_length=30)),
                ('added', models.DateTimeField(default=datetime.datetime.now)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Payment Options',
            },
        ),
        migrations.CreateModel(
            name='RentDefaulters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('defaulted_status', models.CharField(choices=[('active', 'Active'), ('cleared', 'Cleared')], default='active', max_length=20)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rental_property.building')),
                ('site_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Associated Account')),
                ('tenancy_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.tenants')),
            ],
            options={
                'verbose_name': 'Rent Defaulters',
                'verbose_name_plural': 'Rent Defaulters',
            },
        ),
        migrations.CreateModel(
            name='WaterBilling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_code', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('units', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=9, null=True)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Unit Price (KES)')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=9)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=9)),
                ('month', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('jan', 'January'), ('feb', 'February'), ('mar', 'March'), ('apr', 'April'), ('may', 'May'), ('jun', 'June'), ('jul', 'July'), ('aug', 'August'), ('sep', 'September'), ('oct', 'October'), ('nov', 'November'), ('dec', 'December')], max_length=47, null=True)),
                ('meter_rent', models.DecimalField(decimal_places=2, default=50, max_digits=9)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('cleared', models.BooleanField(default=False)),
                ('lock_cycle', models.BooleanField(default=False)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('added', models.DateTimeField(default=datetime.datetime.now)),
                ('updated', models.DateTimeField(auto_now_add=True)),
                ('building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rental_property.building')),
            ],
            options={
                'verbose_name_plural': 'Billing 2 | Water Billing Cycles',
            },
        ),
        migrations.CreateModel(
            name='WaterPayments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_code', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('payment_code', models.CharField(max_length=30)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=9)),
                ('payment_method', models.CharField(help_text='e.g. MPESA, KCB ...', max_length=30)),
                ('date_paid', models.DateField()),
                ('status', models.CharField(choices=[('approved', 'Approved'), ('rejected', 'Rejected'), ('pending', 'Pending')], default='pending', max_length=10)),
                ('remarks', models.TextField(blank=True, max_length=155, null=True, verbose_name='Message?')),
                ('lock', models.BooleanField(default=False)),
                ('created', models.DateTimeField(default=datetime.datetime.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='utils.waterbilling')),
            ],
            options={
                'verbose_name': 'Billing 2 | Water Billing Payments',
                'verbose_name_plural': 'Billing 2 | Water Billing Payments',
            },
        ),
        migrations.CreateModel(
            name='WaterMeter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20, unique=True)),
                ('ssid', models.CharField(blank=True, max_length=20, null=True)),
                ('created', models.DateTimeField(default=datetime.datetime.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('unit', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='water_meters', to='rental_property.rentalunit')),
            ],
        ),
        migrations.CreateModel(
            name='WaterConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_reading', models.DecimalField(decimal_places=2, max_digits=9)),
                ('current_reading', models.DecimalField(decimal_places=2, max_digits=9)),
                ('consumption', models.DecimalField(decimal_places=2, default=0, max_digits=9)),
                ('reading_added', models.DateField()),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='utils.waterbilling')),
            ],
        ),
        migrations.AddField(
            model_name='waterbilling',
            name='meter_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='utils.watermeter'),
        ),
        migrations.AddField(
            model_name='waterbilling',
            name='rental_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rental_property.rentalunit'),
        ),
        migrations.AddField(
            model_name='waterbilling',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.tenants'),
        ),
        migrations.CreateModel(
            name='UnitRentDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('rent_amount', models.DecimalField(decimal_places=2, help_text='This field will be populated automatically', max_digits=9)),
                ('currency', models.CharField(default='KES', max_length=10)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=9)),
                ('pay_for_month', multiselectfield.db.fields.MultiSelectField(choices=[('jan', 'January'), ('feb', 'February'), ('mar', 'March'), ('apr', 'April'), ('may', 'May'), ('jun', 'June'), ('jul', 'July'), ('aug', 'August'), ('sep', 'September'), ('oct', 'October'), ('nov', 'November'), ('dec', 'December')], max_length=47)),
                ('cleared', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('refunded', 'Refunded'), ('open', 'open'), ('closed', 'closed'), ('defaulted', 'Added To Defaulted')], default='open', max_length=15)),
                ('rent_type', models.CharField(choices=[('rent', 'Monthly Rent'), ('s_deposit', 'Security Deposit')], default='rent', max_length=15)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('due_date', models.DateTimeField()),
                ('notify_tenant', models.BooleanField(default=True)),
                ('added', models.DateTimeField(default=datetime.datetime.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.tenants')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rental_property.rentalunit')),
            ],
            options={
                'verbose_name': 'Rent For Unit',
                'verbose_name_plural': 'Billing 1 | Rent Details',
            },
        ),
        migrations.CreateModel(
            name='TemporaryRelief',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relief_detail', models.TextField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired')], default='active', max_length=10)),
                ('expires', models.DateTimeField()),
                ('created', models.DateTimeField(default=datetime.datetime.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('already_sent', models.BooleanField(default=False)),
                ('defaulter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='utils.rentdefaulters')),
            ],
        ),
        migrations.CreateModel(
            name='RentPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_code', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('payment_code', models.CharField(max_length=155)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=9)),
                ('paid_for_month', multiselectfield.db.fields.MultiSelectField(choices=[('jan', 'January'), ('feb', 'February'), ('mar', 'March'), ('apr', 'April'), ('may', 'May'), ('jun', 'June'), ('jul', 'July'), ('aug', 'August'), ('sep', 'September'), ('oct', 'October'), ('nov', 'November'), ('dec', 'December')], max_length=47)),
                ('paid_on', models.DateField(blank=True, null=True)),
                ('paid_with_stripe', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('approved', 'Approved'), ('rejected', 'Rejected'), ('pending', 'Pending')], default='pending', max_length=15)),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Reason, if rejected')),
                ('confirmed', models.BooleanField(default=False)),
                ('notify_tenant', models.BooleanField(default=False)),
                ('added_on', models.DateTimeField(default=datetime.datetime.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rental_property.building')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments_manager', to='accounts.managers')),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='utils.paymentmethods')),
                ('rent_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='utils.unitrentdetails')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pay', to='accounts.tenants')),
            ],
            options={
                'verbose_name_plural': 'Billing 1 | Rent Payments',
            },
        ),
        migrations.CreateModel(
            name='RentIncrementNotice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref_code', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('notify_all', models.BooleanField(default=True, verbose_name='Send TO All Tenants')),
                ('re', models.CharField(default='Rent Increase', max_length=155, verbose_name='RE: ')),
                ('takes_effect_on', models.DateField()),
                ('notice_detail', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rental_property.building')),
                ('to_tenants', models.ManyToManyField(blank=True, to='accounts.tenants')),
            ],
        ),
        migrations.CreateModel(
            name='MpesaOnline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MerchantRequestID', models.CharField(blank=True, max_length=155, null=True)),
                ('CheckoutRequestID', models.CharField(blank=True, max_length=155, null=True)),
                ('ResultCode', models.CharField(blank=True, max_length=100, null=True)),
                ('ResultDesc', models.CharField(blank=True, max_length=100, null=True)),
                ('Amount', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('MpesaReceiptNumber', models.CharField(blank=True, max_length=100, null=True)),
                ('TransactionDate', models.CharField(blank=True, max_length=55, null=True)),
                ('PhoneNumber', models.CharField(blank=True, max_length=25, null=True)),
                ('update_status', models.CharField(default='recieved', max_length=10)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='utils.unitrentdetails')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.tenants')),
            ],
            options={
                'verbose_name': 'Mpesa Online Payments',
                'verbose_name_plural': 'Mpesa Online Payments',
            },
        ),
        migrations.CreateModel(
            name='ElectricityReadings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_reading', models.DecimalField(decimal_places=2, max_digits=9)),
                ('current_reading', models.DecimalField(decimal_places=2, max_digits=9)),
                ('units', models.DecimalField(decimal_places=2, max_digits=9)),
                ('reading_date', models.DateTimeField()),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='utils.electricitybilling')),
            ],
        ),
        migrations.CreateModel(
            name='ElectricityPayments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_code', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('payment_code', models.CharField(max_length=30)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=9)),
                ('payment_method', models.CharField(help_text='e.g. MPESA, KCB ...', max_length=30)),
                ('status', models.CharField(choices=[('approved', 'Approved'), ('rejected', 'Rejected'), ('pending', 'Pending')], default='pending', max_length=10)),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Message?')),
                ('lock', models.BooleanField(default=False)),
                ('payment_date', models.DateField()),
                ('created', models.DateTimeField(default=datetime.datetime.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='utils.electricitybilling')),
            ],
            options={
                'verbose_name': 'Billing 3 | Electricity Bill Payments',
                'verbose_name_plural': 'Billing 3 | Electricity Bill Payments',
            },
        ),
        migrations.CreateModel(
            name='ElectricityMeter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20, unique=True)),
                ('ssid', models.CharField(blank=True, max_length=20, null=True)),
                ('created', models.DateTimeField(default=datetime.datetime.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('unit', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='electricity_meters', to='rental_property.rentalunit')),
            ],
        ),
        migrations.AddField(
            model_name='electricitybilling',
            name='meter_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='utils.electricitymeter'),
        ),
        migrations.AddField(
            model_name='electricitybilling',
            name='rental_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rental_property.rentalunit'),
        ),
        migrations.AddField(
            model_name='electricitybilling',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.tenants'),
        ),
    ]
